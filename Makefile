# Makefile pour faciliter le d√©veloppement

.PHONY: help install start stop build logs shell db-reset test

help: ## Affiche cette aide
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

install: ## Installation compl√®te du projet
	@echo "üöÄ Installation du projet..."
	docker compose down -v
	docker compose build --no-cache
	docker compose up -d
	@echo "‚è≥ Attente que la base soit pr√™te..."
	sleep 10
	docker compose exec app composer install
	docker compose exec app npm install
	docker compose exec app npm run build
	docker compose exec app php bin/console doctrine:database:create --if-not-exists
	docker compose exec app php bin/console doctrine:migrations:migrate --no-interaction
	@echo "‚úÖ Installation termin√©e!"
	@echo "üåê App: http://localhost:8000"
	@echo "üóÑÔ∏è  Adminer: http://localhost:8080"

start: ## D√©marre les conteneurs
	docker compose up -d
	@echo "‚è≥ Build des assets..."
	docker compose exec app npm run build
	@echo "‚úÖ Conteneurs d√©marr√©s!"

stop: ## Arr√™te les conteneurs
	docker compose down
	@echo "‚úÖ Conteneurs arr√™t√©s!"

build: ## Rebuild les conteneurs
	docker compose build --no-cache

logs: ## Affiche les logs
	docker compose logs -f

shell: ## Acc√®s shell au conteneur app
	docker compose exec app bash

db-reset: ## Recr√©e la base de donn√©es
	docker compose exec app php bin/console doctrine:database:drop --force --if-exists
	docker compose exec app php bin/console doctrine:database:create
	docker compose exec app php bin/console doctrine:migrations:migrate --no-interaction

test: ## Lance les tests
	docker compose exec app php bin/phpunit

composer: ## Installer les d√©pendances Composer
	docker compose exec app composer install

npm: ## Installer les d√©pendances NPM
	docker compose exec app npm install

deploy-build: ## Build pour Railway
	docker build -t symfony-railway -f Dockerfile .

clean: ## Nettoie tout
	docker compose down -v
	docker system prune -f

console: ## Console Symfony - Usage: make console cache:clear
	docker compose exec app php bin/console $(filter-out $@,$(MAKECMDGOALS))

%:
	@:

# === Raccourcis Symfony ===
migrate: ## Appliquer les migrations
	docker compose exec app php bin/console doctrine:migrations:migrate --no-interaction

migration: ## Cr√©er une nouvelle migration
	docker compose exec app php bin/console make:migration

fixtures: ## Charger les fixtures
	docker compose exec app php bin/console doctrine:fixtures:load --no-interaction

clear: ## Vider le cache
	docker compose exec app php bin/console cache:clear

entity: ## Cr√©er une entit√©
	docker compose exec app php bin/console make:entity

controller: ## Cr√©er un contr√¥leur
	docker compose exec app php bin/console make:controller

routes: ## Afficher les routes
	docker compose exec app php bin/console debug:router